classdef NdgBJ2d < NdgBJAbstract

    methods
        function obj = NdgBJ2d( mesh )
            obj = obj@NdgBJAbstract( mesh );
        end
        
        function fphys = matLimit( obj, fphys, fieldId )
            [ fvmin, fvmax, cvar ] = obj.matEvaluateVertAverage( ...
                fphys, ...
                fieldId ...
                );
            
            for m = obj.Nmesh
                fphys{m}(:,:,fieldId) = mxBJ2d(...
                    fphys{m}(:,:,fieldId), ...
                    obj.meshUnion(m).x, ...
                    obj.meshUnion(m).y, ...
                    cvar{m}, ...
                    obj.meshUnion(m).xc, ...
                    obj.meshUnion(m).yc, ...
                    obj.meshUnion(m).LAV, ...
                    fvmin, ...
                    fvmax, ...
                    obj.meshUnion(m).cell.Fmask, ...
                    obj.meshUnion(m).EToV, ...
                    obj.meshUnion(m).Js, ...
                    obj.ws{m} ...
                    );
            end
        end
    end
    
end

